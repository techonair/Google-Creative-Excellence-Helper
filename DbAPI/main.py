from flask import Flask, request, jsonify
from flask_cors import CORS
from connection import insert_data
from datetime import datetime

app = Flask(__name__)
CORS(app)  # Enable CORS for all routes


@app.route('/insert', methods=['POST'])
def insert():
    data = request.get_json()

    # Extracting values from the JSON object
    timestamp = data.get("timestamp")
    case_details = data.get("caseDetails", {})

    # Extracting fields from caseDetails
    master_id = case_details.get("MasterId")
    case_id = case_details.get("CaseId")
    sector = case_details.get("Sector")
    field_c = case_details.get("FieldC")
    field_d = case_details.get("FieldD")
    field_e = case_details.get("FieldE")
    field_f = case_details.get("FieldF")
    field_g = case_details.get("FieldG")
    field_h = case_details.get("FieldH")
    field_i = case_details.get("FieldI")

    # Validating required fields
    if not timestamp or not master_id or not case_id:
        return jsonify({"status": "error", "message": "Timestamp, MasterId, and CaseId are required."}), 400

    # Convert the timestamp string to a datetime object
    reported_time = datetime.strptime(timestamp, '%b %d, %Y, %I:%M %p')

    # Generate AutoGeneratedCaseId by concatenating MasterId and CaseId
    auto_generated_case_id = f"#{master_id}#{case_id}"

    response = insert_data(auto_generated_case_id, master_id, case_id, reported_time, sector, field_c, field_d, field_e, field_f, field_g, field_h, field_i)
    return jsonify(response)

if __name__ == '__main__':
    app.run(debug=True)
